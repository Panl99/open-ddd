// ---Auto Generated by Only4Play ---
package com.only4play.system.domain.permission.resource.mapper;

import com.only4play.common.mapper.DateMapper;
import com.only4play.common.mapper.GenericEnumMapper;
import com.only4play.system.domain.permission.resource.Resource;
import com.only4play.system.domain.permission.resource.creator.ResourceCreator;
import com.only4play.system.domain.permission.resource.query.ResourceQuery;
import com.only4play.system.domain.permission.resource.request.ResourceCreateRequest;
import com.only4play.system.domain.permission.resource.request.ResourceQueryRequest;
import com.only4play.system.domain.permission.resource.request.ResourceUpdateRequest;
import com.only4play.system.domain.permission.resource.response.ResourceResponse;
import com.only4play.system.domain.permission.resource.updater.ResourceUpdater;
import com.only4play.system.domain.permission.resource.vo.ResourceVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class
    }
)
public interface ResourceMapper {
  ResourceMapper INSTANCE = Mappers.getMapper(ResourceMapper.class);

  Resource dtoToEntity(ResourceCreator dto);

  ResourceUpdater request2Updater(ResourceUpdateRequest request);

  ResourceCreator request2Dto(ResourceCreateRequest request);

  ResourceQuery request2Query(ResourceQueryRequest request);

  ResourceResponse vo2Response(ResourceVO vo);

  default ResourceResponse vo2CustomResponse(ResourceVO vo) {
    ResourceResponse response = vo2Response(vo);
    return response;
  }
}
