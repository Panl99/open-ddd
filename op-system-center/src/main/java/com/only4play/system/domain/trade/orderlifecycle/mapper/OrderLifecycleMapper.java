// ---Auto Generated by Only4Play ---
package com.only4play.system.domain.trade.orderlifecycle.mapper;

import com.only4play.common.mapper.DateMapper;
import com.only4play.common.mapper.GenericEnumMapper;
import com.only4play.system.domain.trade.orderlifecycle.OrderLifecycle;
import com.only4play.system.domain.trade.orderlifecycle.creator.OrderLifecycleCreator;
import com.only4play.system.domain.trade.orderlifecycle.query.OrderLifecycleQuery;
import com.only4play.system.domain.trade.orderlifecycle.request.OrderLifecycleCreateRequest;
import com.only4play.system.domain.trade.orderlifecycle.request.OrderLifecycleQueryRequest;
import com.only4play.system.domain.trade.orderlifecycle.request.OrderLifecycleUpdateRequest;
import com.only4play.system.domain.trade.orderlifecycle.response.OrderLifecycleResponse;
import com.only4play.system.domain.trade.orderlifecycle.updater.OrderLifecycleUpdater;
import com.only4play.system.domain.trade.orderlifecycle.vo.OrderLifecycleVO;
import com.only4play.system.infrastructure.converter.CustomMapper;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class,
        CustomMapper.class
    }
)
public interface OrderLifecycleMapper {
  OrderLifecycleMapper INSTANCE = Mappers.getMapper(OrderLifecycleMapper.class);

  OrderLifecycle dtoToEntity(OrderLifecycleCreator dto);

  OrderLifecycleUpdater request2Updater(OrderLifecycleUpdateRequest request);

  OrderLifecycleCreator request2Dto(OrderLifecycleCreateRequest request);

  OrderLifecycleQuery request2Query(OrderLifecycleQueryRequest request);

  OrderLifecycleResponse vo2Response(OrderLifecycleVO vo);

  default OrderLifecycleResponse vo2CustomResponse(OrderLifecycleVO vo) {
    OrderLifecycleResponse response = vo2Response(vo);
    return response;
  }
}
