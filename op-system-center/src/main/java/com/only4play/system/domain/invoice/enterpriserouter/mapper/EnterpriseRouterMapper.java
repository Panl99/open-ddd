// ---Auto Generated by Only4Play ---
package com.only4play.system.domain.invoice.enterpriserouter.mapper;

import com.only4play.common.mapper.DateMapper;
import com.only4play.common.mapper.GenericEnumMapper;
import com.only4play.system.domain.invoice.enterpriserouter.EnterpriseRouter;
import com.only4play.system.domain.invoice.enterpriserouter.creator.EnterpriseRouterCreator;
import com.only4play.system.domain.invoice.enterpriserouter.query.EnterpriseRouterQuery;
import com.only4play.system.domain.invoice.enterpriserouter.request.EnterpriseRouterCreateRequest;
import com.only4play.system.domain.invoice.enterpriserouter.request.EnterpriseRouterQueryRequest;
import com.only4play.system.domain.invoice.enterpriserouter.request.EnterpriseRouterUpdateRequest;
import com.only4play.system.domain.invoice.enterpriserouter.response.EnterpriseRouterResponse;
import com.only4play.system.domain.invoice.enterpriserouter.updater.EnterpriseRouterUpdater;
import com.only4play.system.domain.invoice.enterpriserouter.vo.EnterpriseRouterVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class
    }
)
public interface EnterpriseRouterMapper {
  EnterpriseRouterMapper INSTANCE = Mappers.getMapper(EnterpriseRouterMapper.class);

  EnterpriseRouter dtoToEntity(EnterpriseRouterCreator dto);

  EnterpriseRouterUpdater request2Updater(EnterpriseRouterUpdateRequest request);

  EnterpriseRouterCreator request2Dto(EnterpriseRouterCreateRequest request);

  EnterpriseRouterQuery request2Query(EnterpriseRouterQueryRequest request);

  EnterpriseRouterResponse vo2Response(EnterpriseRouterVO vo);

  default EnterpriseRouterResponse vo2CustomResponse(EnterpriseRouterVO vo) {
    EnterpriseRouterResponse response = vo2Response(vo);
    return response;
  }
}
