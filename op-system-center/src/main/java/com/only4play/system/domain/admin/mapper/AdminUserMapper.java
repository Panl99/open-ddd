// ---Auto Generated by Only4Play ---
package com.only4play.system.domain.admin.mapper;

import com.only4play.common.mapper.DateMapper;
import com.only4play.common.mapper.GenericEnumMapper;
import com.only4play.system.domain.admin.AdminUser;
import com.only4play.system.domain.admin.creator.AdminUserCreator;
import com.only4play.system.domain.admin.query.AdminUserQuery;
import com.only4play.system.domain.admin.request.AdminUserCreateRequest;
import com.only4play.system.domain.admin.request.AdminUserQueryRequest;
import com.only4play.system.domain.admin.request.AdminUserUpdateRequest;
import com.only4play.system.domain.admin.response.AdminUserResponse;
import com.only4play.system.domain.admin.updater.AdminUserUpdater;
import com.only4play.system.domain.admin.vo.AdminUserVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class
    }
)
public interface AdminUserMapper {
  AdminUserMapper INSTANCE = Mappers.getMapper(AdminUserMapper.class);

  AdminUser dtoToEntity(AdminUserCreator dto);

  AdminUserUpdater request2Updater(AdminUserUpdateRequest request);

  AdminUserCreator request2Dto(AdminUserCreateRequest request);

  AdminUserQuery request2Query(AdminUserQueryRequest request);

  AdminUserResponse vo2Response(AdminUserVO vo);

  default AdminUserResponse vo2CustomResponse(AdminUserVO vo) {
    AdminUserResponse response = vo2Response(vo);
    return response;
  }
}
