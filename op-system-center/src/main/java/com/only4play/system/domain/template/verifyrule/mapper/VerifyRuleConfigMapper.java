// ---Auto Generated by Only4Play ---
package com.only4play.system.domain.template.verifyrule.mapper;

import com.only4play.common.mapper.DateMapper;
import com.only4play.common.mapper.GenericEnumMapper;
import com.only4play.system.domain.template.verifyrule.VerifyRuleConfig;
import com.only4play.system.domain.template.verifyrule.creator.VerifyRuleConfigCreator;
import com.only4play.system.domain.template.verifyrule.query.VerifyRuleConfigQuery;
import com.only4play.system.domain.template.verifyrule.request.VerifyRuleConfigCreateRequest;
import com.only4play.system.domain.template.verifyrule.request.VerifyRuleConfigQueryRequest;
import com.only4play.system.domain.template.verifyrule.request.VerifyRuleConfigUpdateRequest;
import com.only4play.system.domain.template.verifyrule.response.VerifyRuleConfigResponse;
import com.only4play.system.domain.template.verifyrule.updater.VerifyRuleConfigUpdater;
import com.only4play.system.domain.template.verifyrule.vo.VerifyRuleConfigVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class
    }
)
public interface VerifyRuleConfigMapper {
  VerifyRuleConfigMapper INSTANCE = Mappers.getMapper(VerifyRuleConfigMapper.class);

  VerifyRuleConfig dtoToEntity(VerifyRuleConfigCreator dto);

  VerifyRuleConfigUpdater request2Updater(VerifyRuleConfigUpdateRequest request);

  VerifyRuleConfigCreator request2Dto(VerifyRuleConfigCreateRequest request);

  VerifyRuleConfigQuery request2Query(VerifyRuleConfigQueryRequest request);

  VerifyRuleConfigResponse vo2Response(VerifyRuleConfigVO vo);

  default VerifyRuleConfigResponse vo2CustomResponse(VerifyRuleConfigVO vo) {
    VerifyRuleConfigResponse response = vo2Response(vo);
    return response;
  }
}
