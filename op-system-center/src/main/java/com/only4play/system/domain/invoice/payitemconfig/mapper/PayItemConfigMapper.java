// ---Auto Generated by Only4Play ---
package com.only4play.system.domain.invoice.payitemconfig.mapper;

import com.only4play.common.mapper.DateMapper;
import com.only4play.common.mapper.GenericEnumMapper;
import com.only4play.system.domain.invoice.payitemconfig.PayItemConfig;
import com.only4play.system.domain.invoice.payitemconfig.creator.PayItemConfigCreator;
import com.only4play.system.domain.invoice.payitemconfig.query.PayItemConfigQuery;
import com.only4play.system.domain.invoice.payitemconfig.request.PayItemConfigCreateRequest;
import com.only4play.system.domain.invoice.payitemconfig.request.PayItemConfigQueryRequest;
import com.only4play.system.domain.invoice.payitemconfig.request.PayItemConfigUpdateRequest;
import com.only4play.system.domain.invoice.payitemconfig.response.PayItemConfigResponse;
import com.only4play.system.domain.invoice.payitemconfig.updater.PayItemConfigUpdater;
import com.only4play.system.domain.invoice.payitemconfig.vo.PayItemConfigVO;
import com.only4play.system.infrastructure.converter.CustomMapper;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class,
        CustomMapper.class
    }
)
public interface PayItemConfigMapper {
  PayItemConfigMapper INSTANCE = Mappers.getMapper(PayItemConfigMapper.class);

  PayItemConfig dtoToEntity(PayItemConfigCreator dto);

  PayItemConfigUpdater request2Updater(PayItemConfigUpdateRequest request);

  PayItemConfigCreator request2Dto(PayItemConfigCreateRequest request);

  PayItemConfigQuery request2Query(PayItemConfigQueryRequest request);

  PayItemConfigResponse vo2Response(PayItemConfigVO vo);

  default PayItemConfigResponse vo2CustomResponse(PayItemConfigVO vo) {
    PayItemConfigResponse response = vo2Response(vo);
    return response;
  }
}
