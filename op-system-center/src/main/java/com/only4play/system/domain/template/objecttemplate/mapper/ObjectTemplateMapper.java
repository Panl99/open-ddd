// ---Auto Generated by Only4Play ---
package com.only4play.system.domain.template.objecttemplate.mapper;

import com.only4play.common.mapper.DateMapper;
import com.only4play.common.mapper.GenericEnumMapper;
import com.only4play.system.domain.template.objecttemplate.ObjectTemplate;
import com.only4play.system.domain.template.objecttemplate.creator.ObjectTemplateCreator;
import com.only4play.system.domain.template.objecttemplate.query.ObjectTemplateQuery;
import com.only4play.system.domain.template.objecttemplate.request.ObjectTemplateCreateRequest;
import com.only4play.system.domain.template.objecttemplate.request.ObjectTemplateQueryRequest;
import com.only4play.system.domain.template.objecttemplate.request.ObjectTemplateUpdateRequest;
import com.only4play.system.domain.template.objecttemplate.response.ObjectTemplateResponse;
import com.only4play.system.domain.template.objecttemplate.updater.ObjectTemplateUpdater;
import com.only4play.system.domain.template.objecttemplate.vo.ObjectTemplateVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class
    }
)
public interface ObjectTemplateMapper {
  ObjectTemplateMapper INSTANCE = Mappers.getMapper(ObjectTemplateMapper.class);

  ObjectTemplate dtoToEntity(ObjectTemplateCreator dto);

  ObjectTemplateUpdater request2Updater(ObjectTemplateUpdateRequest request);

  ObjectTemplateCreator request2Dto(ObjectTemplateCreateRequest request);

  ObjectTemplateQuery request2Query(ObjectTemplateQueryRequest request);

  ObjectTemplateResponse vo2Response(ObjectTemplateVO vo);

  default ObjectTemplateResponse vo2CustomResponse(ObjectTemplateVO vo) {
    ObjectTemplateResponse response = vo2Response(vo);
    return response;
  }
}
