// ---Auto Generated by Only4Play ---
package com.only4play.system.domain.invoice.taxrateconfig.mapper;

import com.only4play.common.mapper.DateMapper;
import com.only4play.common.mapper.GenericEnumMapper;
import com.only4play.system.domain.invoice.taxrateconfig.TaxRateConfig;
import com.only4play.system.domain.invoice.taxrateconfig.creator.TaxRateConfigCreator;
import com.only4play.system.domain.invoice.taxrateconfig.query.TaxRateConfigQuery;
import com.only4play.system.domain.invoice.taxrateconfig.request.TaxRateConfigCreateRequest;
import com.only4play.system.domain.invoice.taxrateconfig.request.TaxRateConfigQueryRequest;
import com.only4play.system.domain.invoice.taxrateconfig.request.TaxRateConfigUpdateRequest;
import com.only4play.system.domain.invoice.taxrateconfig.response.TaxRateConfigResponse;
import com.only4play.system.domain.invoice.taxrateconfig.updater.TaxRateConfigUpdater;
import com.only4play.system.domain.invoice.taxrateconfig.vo.TaxRateConfigVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class
    }
)
public interface TaxRateConfigMapper {
  TaxRateConfigMapper INSTANCE = Mappers.getMapper(TaxRateConfigMapper.class);

  TaxRateConfig dtoToEntity(TaxRateConfigCreator dto);

  TaxRateConfigUpdater request2Updater(TaxRateConfigUpdateRequest request);

  TaxRateConfigCreator request2Dto(TaxRateConfigCreateRequest request);

  TaxRateConfigQuery request2Query(TaxRateConfigQueryRequest request);

  TaxRateConfigResponse vo2Response(TaxRateConfigVO vo);

  default TaxRateConfigResponse vo2CustomResponse(TaxRateConfigVO vo) {
    TaxRateConfigResponse response = vo2Response(vo);
    return response;
  }
}
